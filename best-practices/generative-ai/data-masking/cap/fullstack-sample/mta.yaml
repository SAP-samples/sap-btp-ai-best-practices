_schema-version: 3.3.0
ID: ai-data-masking-cap-fullstack-demo
version: 1.0.0
description: 'AI Data Masking Demo for CAP (fullstack)'
parameters:
  enable-parallel-deployments: true
build-parameters:
  before-all:
    - builder: custom
      commands:
        - npx -p @sap/cds-dk cds build --profile production

modules:
  - name: ai-data-masking-cap-fullstack-demo-srv
    type: nodejs
    path: gen/srv
    parameters:
      instances: 1
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm-ci
      ignore:
        - 'node_modules/'
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    requires:
      - name: best-practices-xsuaa
      - name: best-practices-aicore

  - name: ai-data-masking-cap-fullstack-demo
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      disk-quota: 256M
      memory: 256M
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: best-practices-xsuaa
    build-parameters:
      ignore:
        - 'node_modules/'
      builder: custom
      commands:
        - npm install --prefix ../ask-email
        - npm run build --prefix ../ask-email
    provides:
      - name: app-api
        properties:
          app-protocol: ${protocol}
          app-uri: ${default-uri}

resources:
  - name: best-practices-xsuaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: best-practices-xsuaa
        tenant-mode: dedicated

  - name: best-practices-aicore
    type: org.cloudfoundry.existing-service
    parameters:
      service-name: best-practices-aicore
